version: '3.7'

services:
  # Semaphore service
  semaphore:
    image: semaphoreui/semaphore:latest
    container_name: semaphore
    ports:
      - "3000:3000"  # پورت دسترسی به UI Semaphore
    environment:
      - DB_URI=mongodb://semaphore-db:27017/semaphore  # اتصال به MongoDB
      - REDIS_URI=redis://semaphore-redis:6379         # اتصال به Redis
      - SMTP_HOST=smtp.elmakchi.ir  # سرویس ایمیل
      - SMTP_PORT=587  # پورت سرویس ایمیل
      - SMTP_USER=your-info@elmakchi.ir  # ایمیل ارسال‌کننده
      - SMTP_PASS=your-smd6165  # پسورد ایمیل
      - ADMIN_EMAIL=samad.elmakchi@gmail.com  # ایمیل مدیر
      - ADMIN_PASSWORD=61656165  # پسورد مدیر
    volumes:
      - ./semaphore-config:/etc/semaphore
      - ./semaphore-data:/var/lib/semaphore
    depends_on:
      - semaphore-db
      - semaphore-redis
    networks:
      - dev_network
      - traefik_reverse_proxy
    restart: always  # اطمینان از اینکه سرویس در صورت توقف دوباره راه‌اندازی می‌شود
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.semaphore.rule=Host(`semaphore.elmakchi.ir`)"
      - "traefik.http.routers.semaphore.entrypoints=websecure"
      - "traefik.http.routers.semaphore.tls.certresolver=myresolver"
      - "traefik.http.services.semaphore.loadbalancer.server.port=3000"

  # MongoDB service (برای Semaphore)
  semaphore-db:
    image: mongo:latest
    container_name: semaphore-db
    volumes:
      - ./semaphore-db-data:/data/db
    networks:
      - dev_network
      - traefik_reverse_proxy
    restart: always  # اطمینان از اینکه سرویس در صورت توقف دوباره راه‌اندازی می‌شود

  # Redis service (برای Semaphore)
  semaphore-redis:
    image: redis:latest
    container_name: semaphore-redis
    networks:
      - dev_network
      - traefik_reverse_proxy
    restart: always  # اطمینان از اینکه سرویس در صورت توقف دوباره راه‌اندازی می‌شود

  # Ansible service
  ansible:
    image: williamyeh/ansible:alpine3
    container_name: ansible
    volumes:
      - ./ansible:/ansible  # مسیر Playbook های Ansible شما
    command: ["tail", "-f", "/dev/null"]  # این دستور باعث می‌شود کانتینر به صورت دائم در حال اجرا بماند
    networks:
      - dev_network
    restart: always  # اطمینان از اینکه سرویس در صورت توقف دوباره راه‌اندازی می‌شود

networks:
  dev_network:
    driver: bridge
  traefik_reverse_proxy:
    external: true  # شبکه Traefik در شبکه خارجی موجود است

volumes:
  semaphore-db-data:
    driver: local  # اطمینان از ذخیره‌سازی داده‌ها به صورت محلی
  semaphore-data:
    driver: local  # اطمینان از ذخیره‌سازی داده‌ها به صورت محلی
