version: '3'

services:
  terraform:
    image: hashicorp/terraform:latest
    container_name: terraform
    volumes:
      - ./terraform-config:/workspace
    command: ["bash"]
    networks:
      - dev_network
      - traefik_reverse_proxy

  giga:
    image: giga/giga:latest  # فرض بر این است که Giga یک تصویر رسمی Docker دارد.
    container_name: giga
    volumes:
      - ./giga-config:/config  # دایرکتوری پیکربندی Giga
      - ./giga-data:/data  # دایرکتوری داده‌ها برای Giga
    networks:
      - dev_network
      - traefik_reverse_proxy
    ports:
      - "8080:8080"  # پورت نمونه برای دسترسی به Giga
    environment:
      - GIGA_CONFIG_PATH=/config
      - GIGA_DATA_PATH=/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gaia.rule=Host(`gaia.elmakchi.ir`)"
      - "traefik.http.routers.gaia.entrypoints=websecure"
      - "traefik.http.routers.gaia.tls.certresolver=myresolver"
      - "traefik.http.services.gaia.loadbalancer.server.port=8080"

  gaiaapp-runner:
    image: gaiaapp/runner:latest  # تصویر رسمی gaiaapp/runner
    container_name: gaiaapp-runner
    volumes:
      - ./gaia-config:/config  # دایرکتوری پیکربندی برای gaiaapp/runner
      - ./gaia-data:/data  # دایرکتوری داده‌ها برای gaiaapp/runner
    environment:
      - RUNNER_CONFIG_PATH=/config
      - RUNNER_DATA_PATH=/data
    networks:
      - dev_network
      - traefik_reverse_proxy
    command: ["bash", "-c", "echo 'Starting GaiaApp Runner' && ./start.sh"]  # فرمانی برای اجرای فرآیندهای خاص
    restart: always

networks:
  dev_network:
    driver: bridge
  traefik_reverse_proxy:
    external: true


